{"version":3,"file":"addquestion.min.js","sources":["../src/addquestion.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Add question js logic.\n *\n * @copyright  2021 onwards Willian Mano {@link http://conecti.me}\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n        'jquery',\n        'core/str',\n        'core/modal_factory',\n        'core/modal_events',\n        'core/fragment',\n        'core/ajax',\n        'mod_cfp/sweetalert',\n        'core/yui'],\n    function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Swal, Y) {\n\n        var AddQuestion = function(selector, contextid) {\n            this.contextid = contextid;\n\n            this.init(selector);\n        };\n\n        /**\n         * @var {Modal} modal\n         * @private\n         */\n        AddQuestion.prototype.modal = null;\n\n        /**\n         * @var {int} contextid\n         * @private\n         */\n        AddQuestion.prototype.contextid = -1;\n\n        AddQuestion.prototype.init = function(selector) {\n            var triggers = $(selector);\n\n            return Str.get_string('addquestion', 'mod_cfp').then(function(title) {\n                // Create the modal.\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title,\n                    body: this.getBody()\n                }, triggers);\n            }.bind(this)).then(function(modal) {\n                // Keep a reference to the modal.\n                this.modal = modal;\n\n                // We want to reset the form every time it is opened.\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    this.modal.setBody(this.getBody());\n                }.bind(this));\n\n                // We want to hide the submit buttons every time it is opened.\n                this.modal.getRoot().on(ModalEvents.shown, function() {\n                    this.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                }.bind(this));\n\n                // We catch the modal save event, and use it to submit the form inside the modal.\n                // Triggering a form submission will give JS validation scripts a chance to check for errors.\n                this.modal.getRoot().on(ModalEvents.save, this.submitForm.bind(this));\n                // We also catch the form submit event and use it to submit the form with ajax.\n                this.modal.getRoot().on('submit', 'form', this.submitFormAjax.bind(this));\n\n                return this.modal;\n            }.bind(this));\n        };\n\n        AddQuestion.prototype.getBody = function(formdata) {\n            if (typeof formdata === \"undefined\") {\n                formdata = {};\n            }\n\n            // Get the content of the modal.\n            var params = {jsonformdata: JSON.stringify(formdata)};\n\n            return Fragment.loadFragment('mod_cfp', 'question_form', this.contextid, params);\n        };\n\n        AddQuestion.prototype.handleFormSubmissionResponse = function(data) {\n            this.modal.hide();\n            // We could trigger an event instead.\n            Y.use('moodle-core-formchangechecker', function() {\n                M.core_formchangechecker.reset_form_dirty_state();\n            });\n\n            var item = JSON.parse(data.data);\n\n            var tableLine = $('<tr>' +\n                '<th scope=\"row\">'+item.id+'</th>' +\n                '<td>'+item.typename+'</td>' +\n                '<td>'+item.label+'</td>' +\n                '<td>'+item.options+'</td>' +\n                '<td style=\"width: 80px; text-align: center;\">' +\n                    '<a href=\"#\" data-id=\"'+item.id+'\" class=\"btn btn-danger btn-sm delete-question\">' +\n                        '<i class=\"fa fa-trash\"></i>' +\n                    '</a>' +\n                '</td>' +\n            '</tr>');\n\n            tableLine\n                .appendTo('.table-questions tbody')\n                .hide().fadeIn('normal');\n\n            var Toast = Swal.mixin({\n                toast: true,\n                position: 'top-end',\n                showConfirmButton: false,\n                timer: 8000,\n                timerProgressBar: true,\n                onOpen: (toast) => {\n                    toast.addEventListener('mouseenter', Swal.stopTimer);\n                    toast.addEventListener('mouseleave', Swal.resumeTimer);\n                }\n            });\n\n            Toast.fire({\n                icon: 'success',\n                title: data.message\n            });\n        };\n\n        AddQuestion.prototype.handleFormSubmissionFailure = function(data) {\n            // Oh noes! Epic fail :(\n            // Ah wait - this is normal. We need to re-display the form with errors!\n            this.modal.setBody(this.getBody(data));\n        };\n\n        AddQuestion.prototype.submitFormAjax = function(e) {\n            // We don't want to do a real form submission.\n            e.preventDefault();\n\n            var changeEvent = document.createEvent('HTMLEvents');\n            changeEvent.initEvent('change', true, true);\n\n            // Prompt all inputs to run their validation functions.\n            // Normally this would happen when the form is submitted, but\n            // since we aren't submitting the form normally we need to run client side\n            // validation.\n            this.modal.getRoot().find(':input').each(function(index, element) {\n                element.dispatchEvent(changeEvent);\n            });\n\n            // Now the change events have run, see if there are any \"invalid\" form fields.\n            var invalid = $.merge(\n                this.modal.getRoot().find('[aria-invalid=\"true\"]'),\n                this.modal.getRoot().find('.error')\n            );\n\n            // If we found invalid fields, focus on the first one and do not submit via ajax.\n            if (invalid.length) {\n                invalid.first().focus();\n                return;\n            }\n\n            // Convert all the form elements values to a serialised string.\n            var formData = this.modal.getRoot().find('form').serialize();\n\n            // Now we can continue...\n            Ajax.call([{\n                methodname: 'mod_cfp_addquestion',\n                args: {contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\n                done: this.handleFormSubmissionResponse.bind(this),\n                fail: this.handleFormSubmissionFailure.bind(this, formData)\n            }]);\n        };\n\n        AddQuestion.prototype.submitForm = function(e) {\n            e.preventDefault();\n\n            this.modal.getRoot().find('form').submit();\n        };\n\n        return {\n            init: function(selector, contextid) {\n                return new AddQuestion(selector, contextid);\n            }\n        };\n    }\n);\n"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Swal","Y","AddQuestion","selector","contextid","this","init","prototype","modal","triggers","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","getRoot","on","hidden","setBody","shown","append","save","submitForm","submitFormAjax","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","data","hide","use","M","core_formchangechecker","reset_form_dirty_state","item","parse","id","typename","label","options","appendTo","fadeIn","mixin","toast","position","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","fire","icon","message","handleFormSubmissionFailure","e","preventDefault","changeEvent","document","createEvent","initEvent","find","each","index","element","dispatchEvent","invalid","merge","length","first","focus","formData","serialize","call","methodname","args","done","fail","submit"],"mappings":"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"}